---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-scheduler-extender
  namespace: kube-system
data:
 policy.cfg : |
    {
      "kind" : "Policy",
      "apiVersion" : "v1",
      "extenders" : [{
          "urlPrefix": "http://kube-scheduler-extender.developer-center.yyuap.local/",
          "filterVerb": "filter",
          "prioritizeVerb": "prioritize",
          "weight": 1,
          "enableHttps": false,
          "nodeCacheCapable": true,
          "ignorable": true
      }]
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-scheduler-extender
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s.eip.work/layer: monitor
      k8s.eip.work/name: kube-scheduler-extender
  template:
    metadata:
      labels:
        k8s.eip.work/layer: monitor
        k8s.eip.work/name: kube-scheduler-extender
    spec:
      nodeSelector:
        node-role.kubernetes.io/system: ""
      priorityClassName: system-cluster-critical
      containers:
      - command:
        - /app/kube-scheduler-extender
        args:
        - --prometheus_url=http://{{ monitor_master }}:9090
        - --log.level=info
        - --prometheus_memory_threshold=85
        image: {{ IMAGE_REPOSITORY }}/yks/kube-scheduler-extender-prod:20201105103341
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - 'if [[ -f /bin/offline.sh ]]; then /bin/offline.sh;fi; if [[ -f bin/shutdown.sh
                ]]; then bin/shutdown.sh;fi; '
        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /healthcheck
            port: 8888
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: kube-scheduler-extender
        ports:
        - containerPort: 8888
          protocol: TCP
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: /healthcheck
            port: 8888
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 500m
            memory: 256Mi
        securityContext:
          privileged: false
          procMount: Default
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 360


---
apiVersion: v1
kind: Service
metadata:
  name: kube-scheduler-extender
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 8888
    protocol: TCP
    targetPort: 8888
  selector:
    k8s.eip.work/layer: monitor
    k8s.eip.work/name: kube-scheduler-extender


---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kube-scheduler-extender
  namespace: kube-system
  annotations:
    nginx.org/websocket-services: "kube-scheduler-extender"
    nginx.com/sticky-cookie-services: "serviceName=kube-scheduler-extender srv_id expires=1h path=/"
spec:
  rules:
  - host: kube-scheduler-extender.developer-center.yyuap.local
    http:
      paths:
      - path: /
        backend:
          serviceName: kube-scheduler-extender
          servicePort: http